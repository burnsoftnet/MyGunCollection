'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.296
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.296.
'
Namespace Database_Updates
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="My Gun Collection Database UpdateSoap", [Namespace]:="http://www.burnsoft.net/")>  _
    Partial Public Class MyGunCollectionDatabaseUpdate
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private IsRegisteredUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gun_ManufacturerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gun_CalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gun_GripTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gun_ModelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gun_NationalityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gun_TypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Maintance_PlansOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.MyGunCollection_DataLoader.My.MySettings.Default.MyGunCollection_DataLoader_Database_Updates_My_x0020_Gun_x0020_Collection_x0020_Database_x0020_Update
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event IsRegisteredUserCompleted As IsRegisteredUserCompletedEventHandler
        
        '''<remarks/>
        Public Event Gun_ManufacturerCompleted As Gun_ManufacturerCompletedEventHandler
        
        '''<remarks/>
        Public Event Gun_CalCompleted As Gun_CalCompletedEventHandler
        
        '''<remarks/>
        Public Event Gun_GripTypeCompleted As Gun_GripTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event Gun_ModelCompleted As Gun_ModelCompletedEventHandler
        
        '''<remarks/>
        Public Event Gun_NationalityCompleted As Gun_NationalityCompletedEventHandler
        
        '''<remarks/>
        Public Event Gun_TypeCompleted As Gun_TypeCompletedEventHandler
        
        '''<remarks/>
        Public Event Maintance_PlansCompleted As Maintance_PlansCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.burnsoft.net/IsRegisteredUser", RequestNamespace:="http://www.burnsoft.net/", ResponseNamespace:="http://www.burnsoft.net/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsRegisteredUser(ByVal strProdKey As String, ByVal strCName As String) As Boolean
            Dim results() As Object = Me.Invoke("IsRegisteredUser", New Object() {strProdKey, strCName})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsRegisteredUserAsync(ByVal strProdKey As String, ByVal strCName As String)
            Me.IsRegisteredUserAsync(strProdKey, strCName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsRegisteredUserAsync(ByVal strProdKey As String, ByVal strCName As String, ByVal userState As Object)
            If (Me.IsRegisteredUserOperationCompleted Is Nothing) Then
                Me.IsRegisteredUserOperationCompleted = AddressOf Me.OnIsRegisteredUserOperationCompleted
            End If
            Me.InvokeAsync("IsRegisteredUser", New Object() {strProdKey, strCName}, Me.IsRegisteredUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsRegisteredUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsRegisteredUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsRegisteredUserCompleted(Me, New IsRegisteredUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.burnsoft.net/Gun_Manufacturer", RequestNamespace:="http://www.burnsoft.net/", ResponseNamespace:="http://www.burnsoft.net/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gun_Manufacturer() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gun_Manufacturer", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gun_ManufacturerAsync()
            Me.Gun_ManufacturerAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gun_ManufacturerAsync(ByVal userState As Object)
            If (Me.Gun_ManufacturerOperationCompleted Is Nothing) Then
                Me.Gun_ManufacturerOperationCompleted = AddressOf Me.OnGun_ManufacturerOperationCompleted
            End If
            Me.InvokeAsync("Gun_Manufacturer", New Object(-1) {}, Me.Gun_ManufacturerOperationCompleted, userState)
        End Sub
        
        Private Sub OnGun_ManufacturerOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gun_ManufacturerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gun_ManufacturerCompleted(Me, New Gun_ManufacturerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.burnsoft.net/Gun_Cal", RequestNamespace:="http://www.burnsoft.net/", ResponseNamespace:="http://www.burnsoft.net/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gun_Cal() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gun_Cal", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gun_CalAsync()
            Me.Gun_CalAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gun_CalAsync(ByVal userState As Object)
            If (Me.Gun_CalOperationCompleted Is Nothing) Then
                Me.Gun_CalOperationCompleted = AddressOf Me.OnGun_CalOperationCompleted
            End If
            Me.InvokeAsync("Gun_Cal", New Object(-1) {}, Me.Gun_CalOperationCompleted, userState)
        End Sub
        
        Private Sub OnGun_CalOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gun_CalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gun_CalCompleted(Me, New Gun_CalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.burnsoft.net/Gun_GripType", RequestNamespace:="http://www.burnsoft.net/", ResponseNamespace:="http://www.burnsoft.net/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gun_GripType() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gun_GripType", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gun_GripTypeAsync()
            Me.Gun_GripTypeAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gun_GripTypeAsync(ByVal userState As Object)
            If (Me.Gun_GripTypeOperationCompleted Is Nothing) Then
                Me.Gun_GripTypeOperationCompleted = AddressOf Me.OnGun_GripTypeOperationCompleted
            End If
            Me.InvokeAsync("Gun_GripType", New Object(-1) {}, Me.Gun_GripTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGun_GripTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gun_GripTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gun_GripTypeCompleted(Me, New Gun_GripTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.burnsoft.net/Gun_Model", RequestNamespace:="http://www.burnsoft.net/", ResponseNamespace:="http://www.burnsoft.net/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gun_Model() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gun_Model", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gun_ModelAsync()
            Me.Gun_ModelAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gun_ModelAsync(ByVal userState As Object)
            If (Me.Gun_ModelOperationCompleted Is Nothing) Then
                Me.Gun_ModelOperationCompleted = AddressOf Me.OnGun_ModelOperationCompleted
            End If
            Me.InvokeAsync("Gun_Model", New Object(-1) {}, Me.Gun_ModelOperationCompleted, userState)
        End Sub
        
        Private Sub OnGun_ModelOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gun_ModelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gun_ModelCompleted(Me, New Gun_ModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.burnsoft.net/Gun_Nationality", RequestNamespace:="http://www.burnsoft.net/", ResponseNamespace:="http://www.burnsoft.net/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gun_Nationality() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gun_Nationality", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gun_NationalityAsync()
            Me.Gun_NationalityAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gun_NationalityAsync(ByVal userState As Object)
            If (Me.Gun_NationalityOperationCompleted Is Nothing) Then
                Me.Gun_NationalityOperationCompleted = AddressOf Me.OnGun_NationalityOperationCompleted
            End If
            Me.InvokeAsync("Gun_Nationality", New Object(-1) {}, Me.Gun_NationalityOperationCompleted, userState)
        End Sub
        
        Private Sub OnGun_NationalityOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gun_NationalityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gun_NationalityCompleted(Me, New Gun_NationalityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.burnsoft.net/Gun_Type", RequestNamespace:="http://www.burnsoft.net/", ResponseNamespace:="http://www.burnsoft.net/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gun_Type() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gun_Type", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gun_TypeAsync()
            Me.Gun_TypeAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gun_TypeAsync(ByVal userState As Object)
            If (Me.Gun_TypeOperationCompleted Is Nothing) Then
                Me.Gun_TypeOperationCompleted = AddressOf Me.OnGun_TypeOperationCompleted
            End If
            Me.InvokeAsync("Gun_Type", New Object(-1) {}, Me.Gun_TypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGun_TypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gun_TypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gun_TypeCompleted(Me, New Gun_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.burnsoft.net/Maintance_Plans", RequestNamespace:="http://www.burnsoft.net/", ResponseNamespace:="http://www.burnsoft.net/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Maintance_Plans() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Maintance_Plans", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Maintance_PlansAsync()
            Me.Maintance_PlansAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Maintance_PlansAsync(ByVal userState As Object)
            If (Me.Maintance_PlansOperationCompleted Is Nothing) Then
                Me.Maintance_PlansOperationCompleted = AddressOf Me.OnMaintance_PlansOperationCompleted
            End If
            Me.InvokeAsync("Maintance_Plans", New Object(-1) {}, Me.Maintance_PlansOperationCompleted, userState)
        End Sub
        
        Private Sub OnMaintance_PlansOperationCompleted(ByVal arg As Object)
            If (Not (Me.Maintance_PlansCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Maintance_PlansCompleted(Me, New Maintance_PlansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub IsRegisteredUserCompletedEventHandler(ByVal sender As Object, ByVal e As IsRegisteredUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsRegisteredUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub Gun_ManufacturerCompletedEventHandler(ByVal sender As Object, ByVal e As Gun_ManufacturerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gun_ManufacturerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub Gun_CalCompletedEventHandler(ByVal sender As Object, ByVal e As Gun_CalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gun_CalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub Gun_GripTypeCompletedEventHandler(ByVal sender As Object, ByVal e As Gun_GripTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gun_GripTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub Gun_ModelCompletedEventHandler(ByVal sender As Object, ByVal e As Gun_ModelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gun_ModelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub Gun_NationalityCompletedEventHandler(ByVal sender As Object, ByVal e As Gun_NationalityCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gun_NationalityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub Gun_TypeCompletedEventHandler(ByVal sender As Object, ByVal e As Gun_TypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gun_TypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub Maintance_PlansCompletedEventHandler(ByVal sender As Object, ByVal e As Maintance_PlansCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Maintance_PlansCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
