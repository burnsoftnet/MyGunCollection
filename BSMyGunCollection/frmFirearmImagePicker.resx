<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AAAAAACePw4AunpVAKdBAACkPgAAojwAAKxGAACqRAAAqUMAALNNAACwSgAAuF8aALtV
        AAC4UgAAtlAAALxnIgDFXwAAw10AAMFbAAC+WAAAv2IRAMd2KwDRn3EAz2kAAMxmAADLZQAAyWMAAMZg
        AADNgzkA2sKqANhyAADVbwAA0mwAANBqAADvw5IA5X8AAON9AADeeAAA3XcAANp0AADYnVUA8YsAAO6I
        AADoggAA54EAAM92BQDyzp0A/5kAAP6iFgD+pyEA/6oiAP6tLAD7vVgA/7c8AP63PwD/vEYA/rxJAP+/
        TQD6xm0A/8dbAP/LZAD/zGYA+dSNAPTRjwD12qgA/dF2APnTgAD10YQA+92ZAPjfpwDTnhoA/92IAPjl
        swD/5pkA++WjAKmLGwDv1oAA8+rLAIdyCwC0miIA+/C9AP7ytACuqDMA+/zSAPDx4gC3ymIAv86EAJWz
        VQBwnEAAYJQ1AGuoPABHgSYAcLhSAE2zNgAZdw0AIHkaAABmAAAAYwAAAGAAAABfAAAAXQAAAFoAAABY
        AAAAVwAAAFUAAABSAAAAUQAAAE8AAABMAAAASwAAAEkAAABGAAAARAAAAEMAAABBAAAAPgAAADsAAAA4
        AAADbgMAA2oDAAecBwAFawUACGwIAAhkCAANng0ADXUNABWYFQAQcxAAEHAQABN7EwAdpB0AIqYiAB6Q
        HgAggCAAM60zACiGKAA1rjUALpIuADWeNQA9qz0AQqdCAD6bPgBLt0sATbhNAFW8VQBIn0gAWr1aAFCm
        UABev14AYcBhAFisWABmwmYAacNpAGK2YgBtxW0AaLloAHHGcQBzx3MAdsh2AHjGeAB8y3wAgMyAAL2+
        vQC6u7oAt7i3AK2urQAJbg4Agc+GAILPiABitmkAgtCJAGO4bQCC0IoAg9KOACSAMwAjejAAY7lwAGS6
        cgCD05AAhNSSAITTkgBlvHcAhNWVAITWlgBlvnwAhdeaAD6bWACG2J0AZr+AAIbZnwBnwYQAh9qhAIfb
        pQCH3KcAiN2qAIjdqQB50p4AiN6rAInerQBiwYwAieCyAInfsACL4rUAiuG1AIvjuACM5LoAiuG2AJud
        nACL5LsAi+S8AIzlvwBy06wAjefEAIzlwQCN6MYAjurKAI7pyQCP680Aj+3RAI/szwCQ7tUAkO3TAJHv
        1wCS8doAk/PgAJPy3wCS8d0AlPTjAJX25gCV+OsAlffqAJf68gDCw8MAwMHBAL6/vwC8vb0Au7y8ALe4
        uAC1trYAs7S0AKWmpgDAwcIAp6eoAJ+foACdnZ4AmpqbALGxsQCqqqoAoqKiAJeXlwCVlZUAkpKSAJGR
        kQBwcHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAD//////////////////////////////////////wAA/v7+/v7+/v7+/v7+/v7+/v7+
        /v7+/v7+/v7+/v7/AAD+o6Oprq6vtri5u7+/wcPFx8vQ0M7T1NTW2tnb/v8AAP6qrq60uLi7vb+/wsXF
        yMrQ0M7U1NfY2dnd3t7+/wAA/qutsrKzt7e3ur6+wMDGztPU1Nba2dvc3t7h5P7/AAD9Z2dnZ2dmZmZm
        ZWVlZWVlabGwvMnd3+Dh4+Ll/v8AAP1tbWxsbGxsbGpqamppaWp3dnRtqNXk4+Lm6Oj+/wAA/HNxcHFx
        cXBwcHBvb29vbHR3b6jV4+Xm6Ofp6f7/AAD7dmltdnV1dXV1dHR0cWaBanNjh7a7w8zOz8/P/v8AAPt3
        fWV2d3d3d3d3d3dvYomHZYmho6Ojo6Ojo6P+/wAA93OBgnR3d3d3d3d3d2pinZV8k6Ojo6Kin5yamf7/
        AADRZYlibXd3d3d3dnd1ZWKjo5ugnpyZmV5UWVRI/v8AAPWYlYFnd3d3c210dmdij5qZmZeWlF5RLCwr
        Kyv+/wAA+qOjj2Jzd3RmYm9wY4uUkpKRkVxNJiUlLi0tLf7/AAD6oJ6PYmx3bYNiY2NijFxNLyApKSko
        KCgoKCgn/v8AAPKXlo5ianZle2JiY2BQGhkZIyIiIiIiIiEhISD+/wAA9JGQjX9iZnmGYmJiUBQSHR0d
        HR0cHBwbGhoZGf7/AAD5ioiIhnlieF9hYl0WDg4ODhUVFRQUFBMTEh0d/v8AAKeFhISAYmJYU1liWEwq
        FxcWEBAPDw8ODg4ODg7+/wAAp35+el9bWktLS1lLS0tLS0tFHgwMDAwMDAsLC/7/AAD4V1dJSU5OSUlJ
        SUlJSUlJSUlEHhERDQUKCQkI/v8AAPE/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pj9DQRgHBwb+/wAA8Ds7Ozs7
        Ozs7Ozs7Ozs7Ozs7OztAT1ZWVh8EA/7/AADvPTk3Nzc3Nzc3Nzc3Nzc3Nzc+U1VVVVVVVVVV/v8AAKVS
        TDU0NDQ0NDQ4OjU0NDQ6RlJSUlJSUlJSUlL+/wAA7kpKQDIxMzU2RkpKRzw2QEpKSkpKSkpKSkpKSv7/
        AACkQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJC/v8AAOwwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAw
        MDD+/wAA8yQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJP7/AADq6vPs7aXv8fin+fL69dH3+/z9/v7+
        /v7+/v7+/gAAAP//////////gAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAA
        AAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAA
        AAMAAAADAAAAAwAAAAMAAAAH
</value>
  </data>
</root>