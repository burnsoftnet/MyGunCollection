<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Label1.Text" xml:space="preserve">
    <value>You can use this to mark a firearm as stolen.  It will create a Buyer called STOLEN FIREARM, and allow you to put in the date stolen and the case number.  Under the Bound Book it will put the date Stolen as Date in Disposition, and the Case Number under Drivers License/Other ID.  Any other information about the case that you wish to include with this firearm can be added to the Additional or Condition Notes of the firearm in question at any time.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAgAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7p57BmYC7pJwAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3fWbht4zDknsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAADRyL7luH3kuYPluYPkuYPluYPkuYPluYPkuYPluYPluILlt4HluIPluYPlu4bcomfS
        gkLsyKzjspXFoY4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXwazpcgDpdgPpdgPp
        dgPpdgPpdgPpdgPpdgPrewbrhhjujR/thBLqeQXpdgPregbndQbioHn68OjJk3sAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVwK3fagDfcgjgcQffcgjgcQffcgjgcQjheA/rmTv1yI/zzqHy
        uHTnhSDfcwrgcAffcQXYeTX47OjbsqTAu7oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADS
        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
        D//+AB///4A//////////////////w==
</value>
  </data>
</root>